package ru.tinkoff.tictactoe.integration.test;

import com.github.tomakehurst.wiremock.junit5.WireMockTest;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.springframework.beans.factory.annotation.Autowired;
import ru.tinkoff.tictactoe.gamechecker.ValidCheckerResults;
import ru.tinkoff.tictactoe.gamechecker.impl.GameCheckerImpl;
import ru.tinkoff.tictactoe.integration.IntegrationSettings;
import ru.tinkoff.tictactoe.session.Figure;

import java.util.stream.Stream;

import static org.assertj.core.api.Assertions.assertThat;

class GameCheckerImplTest extends IntegrationSettings {
    @Autowired
    private GameCheckerImpl gameChecker;

    private static Stream<Arguments> argsForValidTurns() {
        return Stream.of(
                Arguments.of("" +
                                "___xx______________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        , "" +
                                "___xxx_____________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        ,
                        Figure.CROSS),
                Arguments.of("" +
                                "___xx______________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        , "" +
                                "___xxo_____________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        ,
                        Figure.ZERO)
        );
    }

    @ParameterizedTest
    @MethodSource("argsForValidTurns")
    void givenValidTurns_whenIsValidTurn_ThenReturnTrue(String currGameField, String newGameField, Figure figure) {
        ValidCheckerResults results = gameChecker.isValidTurn(currGameField, newGameField, figure);
        assertThat(results.getIsValid()).isTrue();
    }

    private static Stream<Arguments> argsForInvalidTurns() {
        return Stream.of(
                Arguments.of("" +
                                "___xx______________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        , "" +
                                "___xx______________" +
                                "_______o___________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        ,
                        Figure.CROSS),
                Arguments.of("" +
                                "___xx______________" +
                                "___________________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        , "" +
                                "___xx___o__________" +
                                "_______o___________" +
                                "______o____________" +
                                "_____o_____________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________" +
                                "___________________"
                        ,
                        Figure.ZERO)
        );
    }

    @ParameterizedTest
    @MethodSource("argsForInvalidTurns")
    void givenValidTurns_whenIsInvalidTurn_ThenReturnFalse(String currGameField, String newGameField, Figure figure) {
        ValidCheckerResults results = gameChecker.isValidTurn(currGameField, newGameField, figure);
        assertThat(results.getIsValid()).isFalse();
    }
}